name: Deploy Angular SSR Application

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Step 3: Install dependencies and build the application
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      # Step 4: Archive the `dist` folder as an artifact
      - name: Archive dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist-folder
          path: dist/

      # Step 5: Download the artifact and build the Docker image
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-folder

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest .

      # Step 6: Log in to AWS ECR
      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 7: Push Docker image to AWS ECR
      - name: Push Docker image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # Step 8: Deploy to AWS ECS
      - name: Update ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          service: ${{ secrets.ECS_SERVICE_NAME }}
          force-new-deployment: true
